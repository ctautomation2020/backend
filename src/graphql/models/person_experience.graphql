type Query {
    experience(data: experienceQueryInput): person_experience
    person_experiences(data: PersonQueryInput): [person_experience] 
}

type Mutation {
    createPersonExperience(data: experienceInput! ): person_experience!
    updatePersonExperience(data: experienceUpdateInput!): person_experience!
    deletePersonExperience(data: experienceDeleteInput!): person_experience!
}


type person_experience {
    Experience_ID: Int!    
    Person_ID: Int!
    Designation_Ref: Int
    Organization: String
    Department: String
    Start_Date: String
    End_Date: String
    Emp_Category_Ref: Int
    Work_Nature_Ref: Int
    Position_Held: String
    path: String
}

input experienceQueryInput {
    Experience_ID: Int!
}

input PersonQueryInput {
    Person_ID: Int!
}

input experienceInput {
    Designation_Ref: Int
    Organization: String
    Department: String
    Start_Date: String
    End_Date: String
    Emp_Category_Ref: Int
    Work_Nature_Ref: Int
    Position_Held: String
    path: String
}

input experienceUpdateInput {
    Experience_ID: Int!
    Designation_Ref: Int
    Organization: String
    Department: String
    Start_Date: String
    End_Date: String
    Emp_Category_Ref: Int
    Work_Nature_Ref: Int
    Position_Held: String
    path: String
}

input experienceDeleteInput {
    Experience_ID: Int!
}